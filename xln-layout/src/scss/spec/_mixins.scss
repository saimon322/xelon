
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min !=0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: breakpoint-next($name, $breakpoints);
    @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
    @return if(breakpoint-min($name, $breakpoints)==null, "", "-#{$name}");
}

@mixin media-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin media-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);

    @if $max {
        @media (max-width: $max) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@mixin media-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($lower, $breakpoints);
    $max: breakpoint-max($upper, $breakpoints);

    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin media-only($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    $max: breakpoint-max($name, $breakpoints);

    @if $min !=null and $max !=null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    }

    @else if $max==null {
        @include media-up($name)
    }

    @else if $min==null {
        @include media-down($name)
    }
}

@mixin section-pad {
  padding: 40px 0;

  @include media-up(md) {
    padding: 80px 0;
  }
}

@mixin xln-link {
    &:hover {
        color: var(--xln-main-hover);
    }
    
    &:active {
        color: var(--xln-main-active);
    }
}

@mixin xln-link-blue {
    color: var(--xln-main);

    &:hover {
        color: var(--xln-main-hover);
    }
    
    &:active {
        color: var(--xln-main-active);
    }
}

@mixin scrollhide {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin scrollpad {
  &:last-child {
    position: relative;
    
    &:after {
      content: '';
      display: block;
      position: absolute;
      right: -20px;
      width: 20px;
      height: 1px;
    }
  }
}

@mixin arrows {
  display: grid;
  gap: 8px;
}

@mixin arrow {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 30px;
  color: var(--xln-slider-arrow);
  transition: color 0.2s ease-in-out;

  @include media-up(md) {
    width: 40px;
  }

  &:hover {
    color: var(--xln-main-hover);
  }
}